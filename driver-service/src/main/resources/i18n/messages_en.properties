driver.not.found.by.id.message=Driver with id: {0} not found
driver.already.deleted.message=Driver with id: {0} already deleted
driver.not.found.by.email.message=Driver with email: {0} not found
drivers.not.found.message=Drivers not found
driver.vehicles.not.found.message=Driver with id: {0} has no vehicles yet
driver.with.same.email.already.exists.message=Driver with email: {0} already exists
driver.with.same.phone.already.exists.message=Driver with phone: {0} already exists
driver.current.vehicle.not.found=Driver with id: {0} has no current vehicle

vehicle.not.found.by.id.message=Vehicle with id: {0} not found
vehicle.not.belong.to.driver.message=Vehicle with id: {0} not belongs to driver with id: {1}
vehicles.not.found.message=Vehicles not found
vehicle.not.found.by.license.plate.message=Vehicle with license plate: {0} not found
vehicle.not.found.by.type.message=There are no vehicles with in class: {0}
vehicle.not.found.by.year.message=There are no vehicles with year of manufacture: {0}
vehicle.not.found.by.brand.message=There are no vehicles with brand: {0}
vehicle.with.same.license.plate.already.exists.message=Vehicle with license plate: {0} already exists

method.argument.type.mismatch.message=Error: param - {0} must be an object of: {1} type, but received value - {2}
enum.argument.deserialization.message=Field {0} has invalid value {1}. Possible values: {2}
field.deserialization.message=Error while deserializing field: {0}

field.must.not.be.empty.message=Field: {0} must not be empty
field.must.have.size.message=Value: {1} for field {0} failed size constraint check