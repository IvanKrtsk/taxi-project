review.not.found.by.id.message=Review with id: {0} not found
reviews.not.found.message=Reviews not found
id.is.not.valid.message=Id: {0} is not valid

method.argument.type.mismatch.message=Error: param - {0} must be an object of: {1} type, but received value - {2}
enum.argument.deserialization.message=Field {0} has invalid value {1}. Possible values: {2}
field.deserialization.message=Error while deserializing field: {0}

field.must.not.be.empty.message=Field: {0} must not be empty
field.must.have.size.message=Value: {1} for field {0} failed size constraint check

review.for.ride.by.reviewer.already.exists.message=Review for ride: {0} with reviewer type {1} already exists

feign.deserialization.message=Error while deserializing object with feign decoder
ride.not.belong.to.driver.message=Ride: {0} does not belong to driver: {1}
ride.not.belong.to.passenger.message=Ride: {0} does not belong to passenger: {1}
ride.not.accepted.message=Ride: {0} does not accepted by any driver right now

feign.connection.message.key=Cannot connect to a service