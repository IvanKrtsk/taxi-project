account.already.exists.message=Account for user with id: {0} and type: {1} does not exist
accounts.not.found.message=Account not found
account.not.found.by.id.message=Account with id: {0} not found
account.not.found.by.user.id.and.account.type=Account with id: {0} and type: {1} does not exist
account.balance.is.less.than.amount=Account balance is less than amount {0}

card.not.found.by.id.message=Bank card with id: {0} does not exist
cards.not.found.message=Bank cards not found
card.already.exists.message=Bank card already exist

expense.payment.already.exists.message=Expense payment already exist
expense.payment.not.found.by.id.message=Expense payment with id: {0} not found
expense.payments.not.found.message=Expense payments not found

incomes.not.found.message=Income payments not found
income.not.found.by.id.message=Income payment with id: {0} does not exist
income.for.ride.and.account.id.already.exists.message=Income for ride with id: {0} and account with id: {1} already exist
income.not.found.by.account.id.and.payment.status.message=Income payment not found for account: {0} and payment status: {1}

method.argument.type.mismatch.message=Error: param - {0} must be an object of: {1} type, but received value - {2}
enum.argument.deserialization.message=Field {0} has invalid value {1}. Possible values: {2}
field.deserialization.message=Error while deserializing field: {0}

field.must.not.be.empty.message=Field: {0} must not be empty
field.must.have.size.message=Value: {1} for field {0} failed size constraint check

feign.connection.message.key=Cannot connect to a service
feign.deserialization.message=Error while deserializing object with feign decoder